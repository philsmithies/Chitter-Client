{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/EditModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function EditModal(props) {\n  _s();\n\n  const classes = useStyles();\n  const data = useContext(UserContext);\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    console.log(image);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const updateProfile = async photoId => {\n    try {\n      await Axios.post(\"http://localhost:3001/users/\" + props.username + \"/update/\", {\n        bio: bio,\n        fullName: fullName,\n        bioPhotoId: photoId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async e => {\n    if (!image) {\n      let photoId = \"\";\n      updateProfile(photoId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let photoId = res.data.secure_url;\n      updateProfile(photoId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errorMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-full-width\",\n        label: \"Name\",\n        value: props.fullName,\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setFullName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-full-width\",\n        label: \"Your Bio\",\n        value: props.bio,\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setBio(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        style: {\n          margin: 30\n        },\n        className: \"uploadBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: classes.input,\n          id: \"contained-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            children: \"Update Bio Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            width: 290,\n            backgroundColor: \"lightblue\"\n          },\n          onClick: checkValidation,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"Q2ptmjsGlGvkiTX/p68luhDxWco=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/EditModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","useStyles","theme","root","margin","spacing","input","display","EditModal","props","classes","data","url","preset","image","setImage","errorMsg","setErrorMsg","tweet","setTweet","bio","setBio","fullName","setFullName","newMsgTimeoutHandle","isOpen","setIsOpen","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","componentWillUnmount","clearTimeout","updateProfile","photoId","post","username","bioPhotoId","withCredentials","then","response","setTimeout","err","error","checkValidation","formData","FormData","append","res","secure_url","shrink","value","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function EditModal(props) {\n  const classes = useStyles();\n  const data = useContext(UserContext);\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    console.log(image)\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const updateProfile = async (photoId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/users/\" + props.username + \"/update/\",\n        {\n          bio: bio,\n          fullName: fullName,\n          bioPhotoId: photoId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let photoId = \"\";\n      updateProfile(photoId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let photoId = res.data.secure_url;\n      updateProfile(photoId);\n    }\n  };\n\n  return (\n    <div>\n      {errorMsg}\n      <form autoComplete=\"off\">\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Name\"\n          value={props.fullName}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Your Bio\"\n          value={props.bio}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setBio(e.target.value);\n          }}\n        />\n        <div\n          className={classes.root}\n          style={{ margin: 30 }}\n          className=\"uploadBtn\"\n        >\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" component=\"span\">\n              Update Bio Photo\n            </Button>\n          </label>\n        </div>\n        <div className=\"uploadBtn\">\n          <Button\n            variant=\"contained\"\n            style={{ width: 290, backgroundColor: \"lightblue\" }}\n            onClick={checkValidation}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}