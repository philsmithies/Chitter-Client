{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/';\nimport Axios from './axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    // const data = useContext(UserContext)\n    console.log(\"getting photos\");\n\n    if (!userId) {\n      Axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user\"\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      Axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user/username/\" + userId\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data); // console.log(res.data)\n        // return (res.data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tweets_feed\",\n      children: /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: value.body,\n        username: value.username,\n        createdAt: value.createdAt,\n        publicID: value.publicID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"wvSF2ckxQjUNASfZMrdtN9Q7fbY=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Tweet","Axios","Feed","allData","setAllData","getProfilePhoto","userId","console","log","method","withCredentials","url","then","res","data","setData","response","catch","error","map","value","index","body","username","createdAt","publicID"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,eAAe,GAAG,UAAUC,MAAV,EAAkB;AACxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAI,CAACF,MAAL,EAAa;AACXL,MAAAA,KAAK,CAAC;AACJQ,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE;AAHD,OAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AACAC,QAAAA,OAAO,CAACF,GAAG,CAACC,IAAL,CAAP;AACD,OAPD;AAQD,KATD,MASO;AACLb,MAAAA,KAAK,CAAC;AACJQ,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE,yCAAyCL;AAH1C,OAAD,CAAL,CAIGM,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AACAC,QAAAA,OAAO,CAACF,GAAG,CAACC,IAAL,CAAP,CAFe,CAGf;AACA;AACD,OATD;AAUD;AACF,GAxBD;;AA2BAhB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGa,IADH,CACSI,QAAD,IAAc;AAClBZ,MAAAA,UAAU,CAACY,QAAQ,CAACF,IAAV,CAAV;AACD,KAHH,EAIGG,KAJH,CAIUC,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBU,KAArC;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,cACGf,OAAO,CAACgB,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAED,KAAK,CAACE,IAApB;AAA0B,QAAA,QAAQ,EAAEF,KAAK,CAACG,QAA1C;AAAoD,QAAA,SAAS,EAAEH,KAAK,CAACI,SAArE;AAAgF,QAAA,QAAQ,EAAEJ,KAAK,CAACK;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjDuBvB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/'\nimport Axios from './axios'\nimport './index.css'\n\nexport default function Feed() {\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    // const data = useContext(UserContext)\n    console.log(\"getting photos\");\n    if (!userId) {\n      Axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user\",\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      Axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user/username/\" + userId,\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n        // console.log(res.data)\n        // return (res.data);\n      });\n    }\n  };\n\n\n  useEffect(() => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  }, []);\n\n  return(\n    <div>\n      {allData.map((value, index) => (\n        <div class=\"tweets_feed\">\n          <Tweet tweet={value.body} username={value.username} createdAt={value.createdAt} publicID={value.publicID}/>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}