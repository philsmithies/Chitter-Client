{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function SignUpForm() {\n  _s();\n\n  const classes = useStyles();\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [isMsg, setIsMsg] = useState('');\n  const [image, setImage] = useState(\"\");\n  const [passwordReg, setPasswordReg] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState('');\n  const [emailReg, setEmailReg] = useState(\"\");\n  const [usernameReg, setUsernameReg] = useState(\"\");\n  const [fullNameReg, setFullNameReg] = useState(\"\");\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{4,})\");\n  const emailRegex = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const passwordCriteria = [\"Password does not meet criteria:\", \"\\n• Must be over 4 characters long\", \"\\n• Must include numbers and letters\", \"\\n• Must include at least 1 upper and lower case letter\"];\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n  };\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('upload_preset', preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n\n    try {\n      await Axios.post(\"http://localhost:3001/signup\", {\n        username: usernameReg,\n        fullName: fullNameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: imageUrl\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setIsMsg(\"User already exists, please sign in or create new account\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setIsMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = e => {\n    if (!emailRegex.test(emailReg)) {\n      setEmailMsg(\"Not a valid email address\");\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setEmailMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (!strongRegex.test(passwordReg)) {\n      setNewMsg(newText);\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setNewMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (passwordReg !== passwordConfirmationReg) {\n      setIsMsg(\"Passwords do not match\");\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setIsMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else {\n      register();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [emailMsg, \" \", newMsg, \" \", isMsg, \" \", userMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-full-width\",\n        label: \"username\",\n        placeholder: \"@jim\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setUsernameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-full-width\",\n        label: \"full name\",\n        placeholder: \"JimBob\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setFullNameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"email\",\n        id: \"standard-full-width\",\n        label: \"email\",\n        placeholder: \"jack@chitter.com\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setEmailReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        id: \"standard-full-width\",\n        label: \"password\",\n        placeholder: \"***********\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setPasswordReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        id: \"standard-full-width\",\n        label: \"confirm password\",\n        placeholder: \"***********\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        style: {\n          marginTop: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: classes.input,\n          id: \"contained-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            children: \"Upload Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: classes.input,\n          id: \"icon-button-file\",\n          type: \"file\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"upload picture\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          margin: 30,\n          width: 290,\n          backgroundColor: \"lightblue\"\n        },\n        onClick: register,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"uZlf4/w458ui1Bi+SuZ9vZFPBec=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","IconButton","PhotoCamera","useStyles","theme","root","margin","spacing","input","display","SignUpForm","classes","url","preset","isMsg","setIsMsg","image","setImage","passwordReg","setPasswordReg","confirmPassword","setConfirmPassword","emailMsg","setEmailMsg","emailReg","setEmailReg","usernameReg","setUsernameReg","fullNameReg","setFullNameReg","strongRegex","RegExp","emailRegex","passwordCriteria","newMsgTimeoutHandle","onChange","e","target","files","register","formData","FormData","append","res","post","imageUrl","data","secure_url","username","fullName","password","email","publicId","withCredentials","then","response","console","log","window","location","href","clearTimeout","setTimeout","err","error","checkValidation","test","setNewMsg","newText","passwordConfirmationReg","newMsg","userMsg","shrink","value","errors","marginTop","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function SignUpForm() {\n  const classes = useStyles();\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [isMsg, setIsMsg] = useState('');\n  const [image, setImage] = useState(\"\");\n  const [passwordReg, setPasswordReg] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState('');\n  const [emailReg, setEmailReg] = useState(\"\");\n  const [usernameReg, setUsernameReg] = useState(\"\");\n  const [fullNameReg, setFullNameReg] = useState(\"\");\n  const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{4,})\");\n  const emailRegex = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const passwordCriteria = [\"Password does not meet criteria:\",\n    \"\\n• Must be over 4 characters long\",\n    \"\\n• Must include numbers and letters\",\n    \"\\n• Must include at least 1 upper and lower case letter\"]\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('upload_preset', preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n    try {\n      await Axios.post(\"http://localhost:3001/signup\", {\n        username: usernameReg,\n        fullName: fullNameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: imageUrl,\n      },\n        {\n          withCredentials: true,\n        }).then((response) => {\n          console.log(response);\n          if (response.data === \"User Created\") {\n            window.location.href = \"/login\";\n          } else if (response.data !== \"User Created\") {\n            setIsMsg(\"User already exists, please sign in or create new account\")\n            clearTimeout(newMsgTimeoutHandle);\n            newMsgTimeoutHandle = setTimeout(() => {\n              setIsMsg(\"\")\n              newMsgTimeoutHandle = 0;\n            }, 6500)\n          }\n        });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  const checkValidation = (e) => {\n    if (!emailRegex.test(emailReg)) {\n      setEmailMsg(\"Not a valid email address\")\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setEmailMsg(\"\")\n        newMsgTimeoutHandle = 0;\n      }, 6500)\n    }\n    else if (!strongRegex.test(passwordReg)) {\n      setNewMsg(newText)\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setNewMsg(\"\")\n        newMsgTimeoutHandle = 0;\n      }, 6500)\n    }\n    else if (passwordReg !== passwordConfirmationReg) {\n      setIsMsg(\"Passwords do not match\")\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setIsMsg(\"\")\n        newMsgTimeoutHandle = 0;\n      }, 6500)\n    }\n    else {\n      register()\n    }\n  };\n\n  return (\n    <div>\n    {emailMsg} {newMsg} {isMsg} {userMsg}\n    <form autoComplete=\"off\" >\n      <TextField\n        id=\"standard-full-width\"\n        label=\"username\"\n        placeholder=\"@jim\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setUsernameReg(e.target.value);\n        }}\n      />\n      <TextField\n        id=\"standard-full-width\"\n        label=\"full name\"\n        placeholder=\"JimBob\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setFullNameReg(e.target.value);\n        }}\n      />\n      <TextField\n        type=\"email\"\n        id=\"standard-full-width\"\n        label=\"email\"\n        placeholder=\"jack@chitter.com\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setEmailReg(e.target.value);\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setPasswordReg(e.target.value);\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"confirm password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setConfirmPassword(e.target.value);\n        }}\n      />\n      <div className=\"text-danger\">{errors.password}</div>\n      <div className={classes.root} style={{ marginTop: 30 }}>\n        <input\n          accept=\"image/*\"\n          className={classes.input}\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n          onChange={onChange}\n        />\n        <label htmlFor=\"contained-button-file\">\n          <Button variant=\"contained\" component=\"span\">\n            Upload Profile Picture\n          </Button>\n        </label>\n        <input\n          accept=\"image/*\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={onChange}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton aria-label=\"upload picture\" component=\"span\">\n            <PhotoCamera />\n          </IconButton>\n        </label>\n      </div>\n      <Button\n        variant=\"contained\"\n        style={{ margin: 30, width: 290, backgroundColor: \"lightblue\" }}\n        onClick={register}\n      >\n        Submit\n      </Button>\n    </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}