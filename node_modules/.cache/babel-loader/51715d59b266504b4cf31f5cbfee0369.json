{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogInForm() {\n  _s();\n\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [noUserMsg, setNoUserMsg] = useState('');\n  const [noUserError, setNoUserError] = useState(false);\n  const [user, setUser] = useState();\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername.toLowerCase(),\n        password: loginPassword\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/login\"\n    }).then(res => {\n      if (res.data.auth) {\n        setUser(res.data);\n        console.log(res.data);\n        setLoginStatus(true);\n        localStorage.setItem(\"token\", res.data.token); // window.location.href = \"/\";\n      } else if (res.data === \"No User Exists\") {\n        setNoUserMsg(\"User Not Found\");\n        setNoUserError(true);\n        setLoginStatus(false);\n      }\n    });\n  };\n\n  const userAuthenticated = () => {\n    Axios.get(\"http://localhost:3001/isUserAuth\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: noUserError,\n        helperText: noUserMsg,\n        id: \"standard-full-width\",\n        label: \"username\",\n        placeholder: \"@jim\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setLoginUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        id: \"standard-full-width\",\n        label: \"password\",\n        placeholder: \"***********\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setLoginPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          margin: 30,\n          backgroundColor: \"lightblue\"\n        },\n        onClick: login,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: userAuthenticated,\n      children: \"Is Auth?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogInForm, \"ubjJCcBDyaioP9Z9WNg5ZwgZTM0=\");\n\n_c = LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js"],"names":["React","useState","TextField","Button","Axios","LogInForm","loginUsername","setLoginUsername","loginPassword","setLoginPassword","noUserMsg","setNoUserMsg","noUserError","setNoUserError","user","setUser","loginStatus","setLoginStatus","login","method","data","username","toLowerCase","password","withCredentials","url","then","res","auth","console","log","localStorage","setItem","token","userAuthenticated","get","headers","getItem","shrink","e","target","value","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\n\nexport default function LogInForm() {\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [noUserMsg, setNoUserMsg] = useState('');\n  const [noUserError, setNoUserError] = useState(false);\n  const [user, setUser] = useState()\n  const [loginStatus, setLoginStatus] = (useState(false))\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername.toLowerCase(),\n        password: loginPassword,\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/login\",\n    }).then((res) => {\n      if (res.data.auth) {\n        setUser(res.data)\n        console.log(res.data)\n        setLoginStatus(true)\n        localStorage.setItem(\"token\", res.data.token)\n        // window.location.href = \"/\";\n      } else if (res.data === \"No User Exists\") {\n        setNoUserMsg(\"User Not Found\");\n        setNoUserError(true);\n        setLoginStatus(false)\n      }\n    });\n  };\n\n  const userAuthenticated = () => {\n    Axios.get(\"http://localhost:3001/isUserAuth\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    }).then((res) => {\n      console.log(res)\n    })\n  }\n\n  return (\n    <div>\n    <form autoComplete=\"off\">\n      <TextField\n        error={noUserError}\n        helperText={noUserMsg}\n        id=\"standard-full-width\"\n        label=\"username\"\n        placeholder=\"@jim\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginUsername(e.target.value);\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginPassword(e.target.value);\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        style={{ margin: 30, backgroundColor: \"lightblue\" }}\n        onClick={login}\n      >\n        Submit\n      </Button>\n      {loginStatus && (\n        <h1>Logged in</h1>\n      )}\n    </form>\n          <button onClick={userAuthenticated}>Is Auth?</button>\n          </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}