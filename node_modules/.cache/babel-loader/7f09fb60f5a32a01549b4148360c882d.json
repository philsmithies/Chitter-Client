{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm() {\n  _s();\n\n  const url = 'https://api.cloudinary.com/v1_1/dryaxqxie/image/upload';\n  const preset = 'cyber_photos';\n  const [image, setImage] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('submitted');\n  };\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('upload_preset', preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n\n    try {\n      await Axios.post(\"http://localhost:3001/signup\", {\n        name: nameReg,\n        username: usernameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: imageUrl,\n        job: jobReg\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setIsMsg(\"User already exists, please sign in or create new account\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setIsMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-full-width\",\n      label: \"username\",\n      placeholder: \"@jim\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"email\",\n      id: \"standard-full-width\",\n      label: \"email\",\n      placeholder: \"jack@chitter.com\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      id: \"standard-full-width\",\n      label: \"password\",\n      placeholder: \"***********\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      id: \"standard-full-width\",\n      label: \"confirm password\",\n      placeholder: \"***********\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: 30\n      },\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"mP4q0FKgVbBmATmZZXQmS8mhEdQ=\");\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js"],"names":["React","useState","TextField","Button","SignUpForm","url","preset","image","setImage","handleSubmit","e","preventDefault","console","log","register","formData","FormData","append","res","Axios","post","imageUrl","data","secure_url","name","nameReg","username","usernameReg","password","passwordReg","email","emailReg","publicId","job","jobReg","withCredentials","then","response","window","location","href","setIsMsg","clearTimeout","newMsgTimeoutHandle","setTimeout","err","error","shrink","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\n\nexport default function SignUpForm() {\n\n  const url = 'https://api.cloudinary.com/v1_1/dryaxqxie/image/upload';\n  const preset = 'cyber_photos';\n  const [image, setImage] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('submitted')\n  }\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('upload_preset', preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n    try {\n      await Axios.post(\"http://localhost:3001/signup\", {\n        name: nameReg,\n        username: usernameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: imageUrl,\n        job: jobReg,\n\n      },\n        {\n          withCredentials: true,\n        }).then((response) => {\n          console.log(response);\n          if (response.data === \"User Created\") {\n            window.location.href = \"/login\";\n          } else if (response.data !== \"User Created\") {\n            setIsMsg(\"User already exists, please sign in or create new account\")\n            clearTimeout(newMsgTimeoutHandle);\n            newMsgTimeoutHandle = setTimeout(() => {\n              setIsMsg(\"\")\n              newMsgTimeoutHandle = 0;\n            }, 6500)\n          }\n        });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField\n        id=\"standard-full-width\"\n        label=\"username\"\n        placeholder=\"@jim\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        type=\"email\"\n        id=\"standard-full-width\"\n        label=\"email\"\n        placeholder=\"jack@chitter.com\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"confirm password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <Button variant=\"contained\" color=\"primary\" style={{ margin: 30 }} type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}