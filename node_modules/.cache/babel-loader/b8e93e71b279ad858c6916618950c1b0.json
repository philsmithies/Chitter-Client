{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogInForm() {\n  _s();\n\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [noUserMsg, setNoUserMsg] = useState('');\n  const [noUserError, setNoUserError] = useState(false);\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername.toLowerCase(),\n        password: loginPassword\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/login\"\n    }).then(res => {\n      if (res.data.auth) {\n        localStorage.setItem(\"token\", res.data.token);\n        window.location.href = \"/\";\n      } else if (res.data === \"No User Exists\") {\n        setNoUserMsg(\"User Not Found\");\n        setNoUserError(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      error: noUserError,\n      helperText: noUserMsg,\n      id: \"standard-full-width\",\n      label: \"username\",\n      placeholder: \"@jim\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => {\n        setLoginUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      id: \"standard-full-width\",\n      label: \"password\",\n      placeholder: \"***********\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => {\n        setLoginPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      style: {\n        margin: 30,\n        backgroundColor: \"lightblue\"\n      },\n      onClick: login,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogInForm, \"+R1UnP3oY/OUsLXNQndUCHiDcNs=\");\n\n_c = LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js"],"names":["React","useState","TextField","Button","Axios","LogInForm","loginUsername","setLoginUsername","loginPassword","setLoginPassword","noUserMsg","setNoUserMsg","noUserError","setNoUserError","login","method","data","username","toLowerCase","password","withCredentials","url","then","res","auth","localStorage","setItem","token","window","location","href","shrink","e","target","value","margin","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMa,KAAK,GAAG,MAAM;AAClBV,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEX,aAAa,CAACY,WAAd,EADN;AAEJC,QAAAA,QAAQ,EAAEX;AAFN,OAFF;AAMJY,MAAAA,eAAe,EAAE,IANb;AAOJC,MAAAA,GAAG,EAAE;AAPD,KAAD,CAAL,CAQGC,IARH,CAQSC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACP,IAAJ,CAASQ,IAAb,EAAmB;AACjBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACP,IAAJ,CAASW,KAAvC;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,OAHD,MAGO,IAAIP,GAAG,CAACP,IAAJ,KAAa,gBAAjB,EAAmC;AACxCL,QAAAA,YAAY,CAAC,gBAAD,CAAZ;AACAE,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KAhBD;AAiBD,GAlBD;;AAoBA,sBACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAED,WADT;AAEE,MAAA,UAAU,EAAEF,SAFd;AAGE,MAAA,EAAE,EAAC,qBAHL;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,WAAW,EAAC,MALd;AAME,MAAA,SAAS,MANX;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,eAAe,EAAE;AACfqB,QAAAA,MAAM,EAAE;AADO,OARnB;AAWE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACfzB,QAAAA,gBAAgB,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,WAAW,EAAC,aAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,eAAe,EAAE;AACfH,QAAAA,MAAM,EAAE;AADO,OAPnB;AAUE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACfvB,QAAAA,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD;AAZH;AAAA;AAAA;AAAA;AAAA,YAhBF,eA8BE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,eAAe,EAAE;AAA/B,OAFT;AAGE,MAAA,OAAO,EAAEtB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAlEuBT,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\n\nexport default function LogInForm() {\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [noUserMsg, setNoUserMsg] = useState('');\n  const [noUserError, setNoUserError] = useState(false);\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername.toLowerCase(),\n        password: loginPassword,\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/login\",\n    }).then((res) => {\n      if (res.data.auth) {\n        localStorage.setItem(\"token\", res.data.token)\n        window.location.href = \"/\";\n      } else if (res.data === \"No User Exists\") {\n        setNoUserMsg(\"User Not Found\");\n        setNoUserError(true); \n      }\n    });\n  };\n\n  return (\n    <form autoComplete=\"off\">\n      <TextField\n        error={noUserError}\n        helperText={noUserMsg}\n        id=\"standard-full-width\"\n        label=\"username\"\n        placeholder=\"@jim\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginUsername(e.target.value);\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginPassword(e.target.value);\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        style={{ margin: 30, backgroundColor: \"lightblue\" }}\n        onClick={login}\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}