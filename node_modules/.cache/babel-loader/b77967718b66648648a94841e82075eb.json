{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'React';\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogInForm() {\n  _s();\n\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername.toLowerCase(),\n        password: loginPassword\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/login\"\n    }).then(res => {\n      if (res.data === \"Successfully Authenticated\") {\n        window.location.href = \"/\";\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-full-width\",\n      label: \"username\",\n      placeholder: \"@jim\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => {\n        setLoginUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      id: \"standard-full-width\",\n      label: \"password\",\n      placeholder: \"***********\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: e => {\n        setLoginPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: 30\n      },\n      onClick: login,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LogInForm, \"SWXMbaxrQ+frrfTxQ70hR5INgTQ=\");\n\n_c = LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/LogInForm/index.js"],"names":["React","useState","TextField","Button","Axios","LogInForm","loginUsername","setLoginUsername","loginPassword","setLoginPassword","login","method","data","username","toLowerCase","password","withCredentials","url","then","res","window","location","href","shrink","e","target","value","margin"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMS,KAAK,GAAG,MAAM;AAClBN,IAAAA,KAAK,CAAC;AACHO,MAAAA,MAAM,EAAE,MADL;AAEHC,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAEP,aAAa,CAACQ,WAAd,EADL;AAELC,QAAAA,QAAQ,EAAEP;AAFL,OAFH;AAKIQ,MAAAA,eAAe,EAAE,IALrB;AAMJC,MAAAA,GAAG,EAAE;AAND,KAAD,CAAL,CAOKC,IAPL,CAOWC,GAAD,IAAS;AAChB,UAAIA,GAAG,CAACP,IAAJ,KAAa,4BAAjB,EAA+C;AAC9CQ,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACA;AACH,KAXD;AAYD,GAbD;;AAeA,sBACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,WAAW,EAAC,MAHd;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE;AADO,OANnB;AASE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACfjB,QAAAA,gBAAgB,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,WAAW,EAAC,aAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,eAAe,EAAE;AACfH,QAAAA,MAAM,EAAE;AADO,OAPnB;AAUE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACff,QAAAA,gBAAgB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD;AAZH;AAAA;AAAA;AAAA;AAAA,YAdF,eA4BE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAnD;AAAmE,MAAA,OAAO,EAAEjB,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAtDuBL,S;;KAAAA,S","sourcesContent":["import { React, useState } from 'React'\n\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Axios from './axios'\n\nexport default function LogInForm() {\n\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n\n  const login = () => {\n    Axios({     \n       method: \"POST\",      \n       data: { \n        username: loginUsername.toLowerCase(),        \n        password: loginPassword,      \n      },      withCredentials: true,      \n      url: \"http://localhost:3001/login\",    \n      }).then((res) => {      \n       if (res.data === \"Successfully Authenticated\") {\n        window.location.href = \"/\";      \n       }    \n    });  \n  };\n\n  return (\n    <form autoComplete=\"off\">\n      <TextField\n        id=\"standard-full-width\"\n        label=\"username\"\n        placeholder=\"@jim\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginUsername(e.target.value)\n        }}\n      />\n      <TextField\n        type=\"password\"\n        id=\"standard-full-width\"\n        label=\"password\"\n        placeholder=\"***********\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => {\n          setLoginPassword(e.target.value)\n        }}\n      />\n      <Button variant=\"contained\" color=\"primary\" style={{ margin: 30 }} onClick={login}>\n        Submit\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}