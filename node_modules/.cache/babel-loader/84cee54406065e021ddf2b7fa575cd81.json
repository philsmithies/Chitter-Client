{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"../Tweet/\";\nimport \"./index.css\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const {\n    dataIsLoading,\n    data\n  } = useContext(UserContext); // const [tweetId, setTweetId] = useState();\n\n  const [allData, setAllData] = useState([]);\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  };\n\n  const LoadingWheel = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweets_feed\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loadinggif\",\n        src: process.env.PUBLIC_URL + \"/img/loading.gif\",\n        alt: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  const TweetFeed = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"tweets_feed\",\n      children: allData.map((value, index) => /*#__PURE__*/_jsxDEV(Tweet, {\n        fullName: value.author.fullName,\n        publicId: value.author ? value.author.publicId : \"\",\n        imageUrl: value.imageUrl,\n        text: value.text,\n        username: value.author ? value.author.username : \"\",\n        createdAt: value.createdAt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this);\n  }; // use for individual links\n  // const getTweet = async () => {\n  //   try {\n  //     await axios\n  //       .get(\"http://localhost:3001/tweets/\" + tweetId)\n  //       .then((response) => {\n  //         console.log(response);\n  //       });\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataIsLoading ? /*#__PURE__*/_jsxDEV(LoadingWheel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(TweetFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"PMmdZSVoR7soCg8bz+jH0vxWvvA=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","useContext","axios","Tweet","UserContext","Feed","dataIsLoading","data","allData","setAllData","getTweets","then","response","catch","error","console","log","LoadingWheel","process","env","PUBLIC_URL","TweetFeed","map","value","index","author","fullName","publicId","imageUrl","text","username","createdAt"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA0BN,UAAU,CAACG,WAAD,CAA1C,CAD6B,CAE7B;;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACtBR,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGS,IADH,CACSC,QAAD,IAAc;AAClBH,MAAAA,UAAU,CAACG,QAAQ,CAACL,IAAV,CAAV;AACD,KAHH,EAIGM,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBF,KAArC;AACD,KANH;AAOD,GARD;;AAUA,QAAMG,YAAY,GAAG,MAAM;AACzB,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,kBAFhC;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD;;AAYA,QAAMC,SAAS,GAAG,MAAM;AAC1B;AAAA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACOb,OAAO,CAACc,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,KAAD;AAEE,QAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaC,QAFzB;AAGE,QAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaE,QAA5B,GAAuC,EAHnD;AAIE,QAAA,QAAQ,EAAEJ,KAAK,CAACK,QAJlB;AAKE,QAAA,IAAI,EAAEL,KAAK,CAACM,IALd;AAME,QAAA,QAAQ,EAAEN,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaK,QAA5B,GAAuC,EANnD;AAOE,QAAA,SAAS,EAAEP,KAAK,CAACQ;AAPnB,SACOP,KADP;AAAA;AAAA;AAAA;AAAA,cADH;AADP;AAAA;AAAA;AAAA;AAAA;AAaG,GAdD,CA3B6B,CA2C7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACCJ,aAAa,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAqB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADnC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlEuBD,I;;KAAAA,I","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"../Tweet/\";\nimport \"./index.css\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nexport default function Feed() {\n  const { dataIsLoading, data } = useContext(UserContext);\n  // const [tweetId, setTweetId] = useState();\n  const [allData, setAllData] = useState([]);\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  };\n\n  const LoadingWheel = () => {\n    return (\n      <div className=\"tweets_feed\">\n      <img\n        className=\"loadinggif\"\n        src={process.env.PUBLIC_URL + \"/img/loading.gif\"}\n        alt=\"Loading\"\n      />\n      </div>\n    );\n  };\n\n  const TweetFeed = () => {\n<div className=\"tweets_feed\">\n      {allData.map((value, index) => (\n          <Tweet\n            key={index}\n            fullName={value.author.fullName}\n            publicId={value.author ? value.author.publicId : \"\"}\n            imageUrl={value.imageUrl}\n            text={value.text}\n            username={value.author ? value.author.username : \"\"}\n            createdAt={value.createdAt}\n          />\n      ))}\n    </div>\n  }\n\n  // use for individual links\n\n  // const getTweet = async () => {\n  //   try {\n  //     await axios\n  //       .get(\"http://localhost:3001/tweets/\" + tweetId)\n  //       .then((response) => {\n  //         console.log(response);\n  //       });\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n\n  return (\n    <div>\n    {dataIsLoading ? <LoadingWheel/> : <TweetFeed />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}