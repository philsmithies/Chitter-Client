{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [data, setData] = useState();\n  const [userId, setUserId] = useState(\"phileeep\");\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\"\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  };\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tweets_feed\",\n      children: [getProfilePhoto(value.username), /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: value.body,\n        username: value.username,\n        createdAt: value.createdAt,\n        publicId: data ? data.publicId : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"tpt2gYwEROEeIBCeYmbM9dZUUKE=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Tweet","Feed","data","setData","userId","setUserId","allData","setAllData","getProfilePhoto","console","log","method","withCredentials","url","then","res","getTweets","response","catch","error","map","value","index","username","body","createdAt","publicId"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,UAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,eAAe,GAAG,UAAUJ,MAAV,EAAkB;AACxCK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAI,CAACN,MAAL,EAAa;AACXL,MAAAA,KAAK,CAAC;AACJY,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE;AAHD,OAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACb,IAAhB;AACAC,QAAAA,OAAO,CAACY,GAAG,CAACb,IAAL,CAAP;AACD,OAPD;AAQD,KATD,MASO;AACLH,MAAAA,KAAK,CAAC;AACJY,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE,mCAAmCT;AAHpC,OAAD,CAAL,CAIGU,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACb,IAAhB;AACAC,QAAAA,OAAO,CAACY,GAAG,CAACb,IAAL,CAAP;AACD,OAPD;AAQD;AACF,GArBD;;AAuBA,QAAMc,SAAS,GAAG,MAAM;AACtBjB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGe,IADH,CACSG,QAAD,IAAc;AAClBV,MAAAA,UAAU,CAACU,QAAQ,CAACf,IAAV,CAAV;AACD,KAHH,EAIGgB,KAJH,CAIUC,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBS,KAArC;AACD,KANH;AAOD,GARD;;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACGV,OAAO,CAACc,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,iBACGd,eAAe,CAACa,KAAK,CAACE,QAAP,CADlB,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,KAAK,CAACG,IAApB;AAA0B,QAAA,QAAQ,EAAEH,KAAK,CAACE,QAA1C;AAAoD,QAAA,SAAS,EAAEF,KAAK,CAACI,SAArE;AAAgF,QAAA,QAAQ,EAAEvB,IAAI,GAAGA,IAAI,CAACwB,QAAR,GAAmB;AAAjH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArDuBzB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/'\nimport './index.css'\n\nexport default function Feed() {\n  const [data, setData] = useState();\n  const [userId, setUserId] = useState(\"phileeep\");\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\",\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId,\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  }\n\n\n  useEffect(() => {\n    getTweets()\n  }, []);\n\n  return(\n    <div>\n      {allData.map((value, index) => (\n        <div class=\"tweets_feed\">\n          {getProfilePhoto(value.username)}\n          <Tweet tweet={value.body} username={value.username} createdAt={value.createdAt} publicId={data ? data.publicId : ''}/>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}