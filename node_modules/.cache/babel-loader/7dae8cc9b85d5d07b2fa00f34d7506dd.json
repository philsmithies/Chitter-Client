{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [data, setData] = useState();\n  const [userId, setUserId] = useState(\"123\");\n  const [tweetId, setTweetId] = useState();\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\"\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  };\n\n  const getTweet = async () => {\n    try {\n      await axios.get(\"http://localhost:3001/tweets/\" + tweetId).then(response => {\n        console.log(response);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getTweet();\n    getProfilePhoto(userId);\n    getTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tweets_feed\",\n      children: /*#__PURE__*/_jsxDEV(Tweet, {\n        identity: value._id,\n        tweet: value.body,\n        username: value.username,\n        createdAt: value.createdAt,\n        publicId: data ? data.publicId : '',\n        likes: value.likes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"Qxj/7FFcIJiQkgQ8ZTdmNlj4Qa4=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Tweet","Feed","data","setData","userId","setUserId","tweetId","setTweetId","allData","setAllData","getProfilePhoto","console","log","method","withCredentials","url","then","res","getTweets","response","catch","error","getTweet","get","err","map","value","index","_id","body","username","createdAt","publicId","likes","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMa,eAAe,GAAG,UAAUN,MAAV,EAAkB;AACxCO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAI,CAACR,MAAL,EAAa;AACXL,MAAAA,KAAK,CAAC;AACJc,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE;AAHD,OAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACf,IAAhB;AACAC,QAAAA,OAAO,CAACc,GAAG,CAACf,IAAL,CAAP;AACD,OAPD;AAQD,KATD,MASO;AACLH,MAAAA,KAAK,CAAC;AACJc,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE,mCAAmCX;AAHpC,OAAD,CAAL,CAIGY,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACf,IAAhB;AACAC,QAAAA,OAAO,CAACc,GAAG,CAACf,IAAL,CAAP;AACD,OAPD;AAQD;AACF,GArBD;;AAuBA,QAAMgB,SAAS,GAAG,MAAM;AACtBnB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGiB,IADH,CACSG,QAAD,IAAc;AAClBV,MAAAA,UAAU,CAACU,QAAQ,CAACjB,IAAV,CAAV;AACD,KAHH,EAIGkB,KAJH,CAIUC,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBS,KAArC;AACD,KANH;AAOD,GARD;;AAUA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMvB,KAAK,CAACwB,GAAN,CACJ,kCAAkCjB,OAD9B,EAEJU,IAFI,CAEEG,QAAD,IAAc;AACnBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACD,OAJK,CAAN;AAKD,KAND,CAME,OAAOK,GAAP,EAAY;AACZb,MAAAA,OAAO,CAACU,KAAR,CAAcG,GAAd;AACD;AACF,GAVD;;AAaA1B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ;AACRZ,IAAAA,eAAe,CAACN,MAAD,CAAf;AACAc,IAAAA,SAAS;AACV,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,cACGV,OAAO,CAACiB,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAED,KAAK,CAACE,GAAvB;AAA4B,QAAA,KAAK,EAAEF,KAAK,CAACG,IAAzC;AAA+C,QAAA,QAAQ,EAAEH,KAAK,CAACI,QAA/D;AAAyE,QAAA,SAAS,EAAEJ,KAAK,CAACK,SAA1F;AAAqG,QAAA,QAAQ,EAAE7B,IAAI,GAAGA,IAAI,CAAC8B,QAAR,GAAmB,EAAtI;AAA0I,QAAA,KAAK,EAAEN,KAAK,CAACO,KAAN,CAAYC;AAA7J;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnEuBjC,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/'\nimport './index.css'\n\nexport default function Feed() {\n  const [data, setData] = useState();\n  const [userId, setUserId] = useState(\"123\");\n  const [tweetId, setTweetId] = useState()\n  const [allData, setAllData] = useState([]);\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\",\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId,\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  }\n\n  const getTweet = async () => {\n    try {\n      await axios.get(\n        \"http://localhost:3001/tweets/\" + tweetId,\n      ).then((response) => {\n        console.log(response);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  useEffect(() => {\n    getTweet()\n    getProfilePhoto(userId);\n    getTweets()\n  }, []);\n\n  return(\n    <div>\n      {allData.map((value, index) => (\n        <div class=\"tweets_feed\">\n          <Tweet identity={value._id} tweet={value.body} username={value.username} createdAt={value.createdAt} publicId={data ? data.publicId : ''} likes={value.likes.length}/>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}