{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function TweetModal(props) {\n  _s();\n\n  const classes = useStyles();\n  const data = useContext(UserContext);\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  let newMsgTimeoutHandle = 0;\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader(); // reads the file as url to create preview\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async publicId => {\n    try {\n      await Axios.post(\"http://localhost:3001/new\", {\n        text: tweet,\n        author: data,\n        imageUrl: publicId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async e => {\n    if (!image) {\n      let publicId = \"\";\n      postTweet(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      postTweet(publicId);\n    }\n  }; // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errorMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweetDiv\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"tweetInput\",\n                  name: \"tweet\",\n                  placeholder: \"Whats happening?\",\n                  required: true,\n                  onChange: e => {\n                    setTweet(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  accept: \"image/*\",\n                  className: classes.input,\n                  id: \"contained-button-file\",\n                  multiple: true,\n                  type: \"file\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"contained-button-file\",\n                  children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {\n                    className: \"addPhoto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploadBtn\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: \"tweetBtn\",\n                  onClick: checkValidation,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetModal, \"XSZ2TP/CRb/vmeDOD2J/rtUmLPM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","AddAPhotoIcon","useStyles","theme","root","margin","spacing","input","display","TweetModal","props","classes","data","url","preset","image","setImage","errorMsg","setErrorMsg","tweet","setTweet","previewSource","setPreviewSource","isOpen","setIsOpen","newMsgTimeoutHandle","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","file","previewFile","reader","FileReader","readAsDataURL","onloadend","result","componentWillUnmount","clearTimeout","postTweet","publicId","post","text","author","imageUrl","withCredentials","then","response","setTimeout","err","error","checkValidation","formData","FormData","append","res","secure_url","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function TweetModal(props) {\n  const classes = useStyles();\n  const data = useContext(UserContext);\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  let newMsgTimeoutHandle = 0;\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    // reads the file as url to create preview\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async (publicId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/new\",\n        {\n          text: tweet,\n          author: data,\n          imageUrl: publicId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let publicId = \"\";\n      postTweet(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      postTweet(publicId);\n    }\n  };\n\n  // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                {errorMsg}\n                <form autoComplete=\"off\">\n                <div\n                    className=\"tweetDiv\"\n                  >\n                  <input\n                    type=\"text\"\n                    id=\"tweetInput\"\n                    name=\"tweet\"\n                    placeholder=\"Whats happening?\"\n                    required\n                    onChange={(e) => {\n                      setTweet(e.target.value);\n                    }}\n                  />\n\n                    <input\n                      required\n                      accept=\"image/*\"\n                      className={classes.input}\n                      id=\"contained-button-file\"\n                      multiple\n                      type=\"file\"\n                      onChange={onChange}\n                    />\n                    <label htmlFor=\"contained-button-file\">\n                    <AddAPhotoIcon className=\"addPhoto\" /> \n                    </label>\n                  </div>\n                  <div className=\"uploadBtn\">\n                    <Button\n                      variant=\"contained\"\n                      className=\"tweetBtn\"\n                      onClick={checkValidation}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </main>\n            {previewSource && (\n              <div className=\"previewDiv\">\n                <img\n                  src={previewSource}\n                  alt=\"chosen\"\n                  className=\"preview-image\"\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Tweet\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}