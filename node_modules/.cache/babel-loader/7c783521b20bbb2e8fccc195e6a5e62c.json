{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function TweetModal(props) {\n  _s();\n\n  const classes = useStyles();\n  const data = useContext(UserContext);\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async publicId => {\n    try {\n      await Axios.post(\"http://localhost:3001/new\", {\n        text: tweet,\n        author: data,\n        imageUrl: publicId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async e => {\n    if (!image) {\n      let publicId = \"\";\n      postTweet(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      postTweet(publicId);\n    }\n  }; // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n\n  const newTweet = async () => {\n    // const formData = new FormData();\n    // formData.append(\"file\", image);\n    // formData.append(\"upload_preset\", preset);\n    // const res = await Axios.post(url, formData);\n    let imageUrl = \"hello\";\n\n    try {\n      await Axios.post(\"http://localhost:3001/tweets/new/\", {\n        text: tweet,\n        author: data,\n        imageUrl: imageUrl\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"There was a problem\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Whats on your mind?\",\n                required: true,\n                onChange: e => {\n                  setTweet(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submitBtn\",\n                onClick: newTweet,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), !previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addPhotoBtn\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  children: [\"Add a Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    accept: \"image/*\",\n                    id: \"contained-button-file\",\n                    multiple: true,\n                    type: \"file\",\n                    style: {\n                      display: \"none\"\n                    },\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetModal, \"H7FZh8OGOpW8LJpCsoaZ7540nTk=\", false, function () {\n  return [useStyles];\n});\n\n_c = TweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","useStyles","theme","root","margin","spacing","input","display","TweetModal","props","classes","data","url","preset","image","setImage","errorMsg","setErrorMsg","tweet","setTweet","newMsgTimeoutHandle","onChange","e","target","files","componentWillUnmount","clearTimeout","postTweet","publicId","post","text","author","imageUrl","withCredentials","then","response","console","log","window","location","href","setTimeout","err","error","checkValidation","formData","FormData","append","res","secure_url","newTweet","isOpen","closeModal","value","previewSource","openModal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function TweetModal(props) {\n  const classes = useStyles();\n  const data = useContext(UserContext);\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async (publicId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/new\",\n        {\n          text: tweet,\n          author: data,\n          imageUrl: publicId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let publicId = \"\";\n      postTweet(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      postTweet(publicId);\n    }\n  };\n\n\n  // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n  const newTweet = async () => {\n    // const formData = new FormData();\n    // formData.append(\"file\", image);\n    // formData.append(\"upload_preset\", preset);\n    // const res = await Axios.post(url, formData);\n    let imageUrl = \"hello\"\n    try {\n      await Axios.post(\n        \"http://localhost:3001/tweets/new/\",\n        {\n          text: tweet,\n          author: data,\n          imageUrl: imageUrl,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\n            \"There was a problem\"\n          );\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <form>\n                  <input\n                    type=\"text\"\n                    id=\"tweet\"\n                    name=\"tweet\"\n                    placeholder=\"Whats on your mind?\"\n                    required\n                    onChange={(e) => {\n                      setTweet(e.target.value);\n                    }}\n                  />\n                  <button className=\"submitBtn\" onClick={newTweet}>\n                    <p>Tweet</p>\n                  </button>\n                  {!previewSource && (\n                    <div className=\"addPhotoBtn\">\n                      <Button variant=\"contained\" component=\"label\">\n                        Add a Photo\n                        <input\n                          accept=\"image/*\"\n                          id=\"contained-button-file\"\n                          multiple\n                          type=\"file\"\n                          style={{ display: \"none\" }}\n                          onChange={onChange}\n                        />\n                      </Button>\n                    </div>\n                  )}\n                </form>\n              </div>\n            </main>\n            {previewSource && (\n              <div className=\"previewDiv\">\n                <img\n                  src={previewSource}\n                  alt=\"chosen\"\n                  className=\"preview-image\"\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Tweet\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}