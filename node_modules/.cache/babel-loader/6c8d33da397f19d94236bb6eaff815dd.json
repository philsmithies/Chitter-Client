{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/EditModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function EditModal(props) {\n  _s();\n\n  const classes = useStyles();\n  const data = useContext(UserContext);\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    console.log(image);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const updateProfile = async photoId => {\n    try {\n      await Axios.post(\"http://localhost:3001/users/\" + props.username + \"/update/\", {\n        bio: bio,\n        fullName: fullName,\n        bioPhotoId: photoId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"http://localhost:3001/profile/\" + props.username;\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async e => {\n    if (!image) {\n      let photoId = \"\";\n      updateProfile(photoId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let photoId = res.data.secure_url;\n      updateProfile(photoId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [errorMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n                autoComplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-full-width\",\n                  label: \"Name\",\n                  placeholder: props.fullName,\n                  fullWidth: true,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  onChange: e => {\n                    setFullName(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-full-width\",\n                  label: \"Your Bio\",\n                  placeholder: props.bio,\n                  fullWidth: true,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  onChange: e => {\n                    setBio(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.root,\n                  style: {\n                    margin: 30\n                  },\n                  className: \"uploadBtn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    accept: \"image/*\",\n                    className: classes.input,\n                    id: \"contained-button-file\",\n                    multiple: true,\n                    type: \"file\",\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"contained-button-file\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      component: \"span\",\n                      children: \"Update Bio Photo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploadBtn\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    style: {\n                      width: 290,\n                      backgroundColor: \"lightblue\"\n                    },\n                    onClick: checkValidation,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Edit Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"Q2ptmjsGlGvkiTX/p68luhDxWco=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/EditModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","useStyles","theme","root","margin","spacing","input","display","EditModal","props","classes","data","url","preset","image","setImage","errorMsg","setErrorMsg","tweet","setTweet","bio","setBio","fullName","setFullName","newMsgTimeoutHandle","isOpen","setIsOpen","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","componentWillUnmount","clearTimeout","updateProfile","photoId","post","username","bioPhotoId","withCredentials","then","response","setTimeout","err","error","checkValidation","formData","FormData","append","res","secure_url","shrink","value","width","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL,GADiC;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ;AANgC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,IAAI,GAAGZ,UAAU,CAACC,WAAD,CAAvB;AAEA,QAAMY,GAAG,GAAG,wDAAZ;AACA,QAAMC,MAAM,GAAG,SAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,GAAD,EAAMC,MAAN,IAAgB3B,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI8B,mBAAmB,GAAG,CAA1B;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiC,SAAS,GAAG,MAAM;AACtB,QAAIlB,KAAK,CAACmB,IAAV,EAAgB;AACdC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD,KAFD,MAEO;AACLL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAND;;AAQA,QAAMM,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAR,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBrB,IAAAA,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACD,GAHD;;AAKA,QAAMyB,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,YAAY,CAAChB,mBAAD,CAAZ;AACD,GAFD;;AAIA,QAAMiB,aAAa,GAAG,MAAOC,OAAP,IAAmB;AACvC,QAAI;AACF,YAAM7C,KAAK,CAAC8C,IAAN,CACJ,iCAAiClC,KAAK,CAACmC,QAAvC,GAAkD,UAD9C,EAEJ;AACExB,QAAAA,GAAG,EAAEA,GADP;AAEEE,QAAAA,QAAQ,EAAEA,QAFZ;AAGEuB,QAAAA,UAAU,EAAEH;AAHd,OAFI,EAOJ;AACEI,QAAAA,eAAe,EAAE;AADnB,OAPI,EAUJC,IAVI,CAUEC,QAAD,IAAc;AACnBf,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;;AACA,YAAIA,QAAQ,CAACrC,IAAT,KAAkB,eAAtB,EAAuC;AACrCkB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,mCAAmCtB,KAAK,CAACmC,QAAjE;AACD,SAFD,MAEO,IAAII,QAAQ,CAACrC,IAAT,KAAkB,eAAtB,EAAuC;AAC5CM,UAAAA,WAAW,CAAC,4BAAD,CAAX;AACAuB,UAAAA,YAAY,CAAChB,mBAAD,CAAZ;AACAA,UAAAA,mBAAmB,GAAGyB,UAAU,CAAC,MAAM;AACrChC,YAAAA,WAAW,CAAC,EAAD,CAAX;AACAO,YAAAA,mBAAmB,GAAG,CAAtB;AACD,WAH+B,EAG7B,KAH6B,CAAhC;AAID;AACF,OAtBK,CAAN;AAuBD,KAxBD,CAwBE,OAAO0B,GAAP,EAAY;AACZjB,MAAAA,OAAO,CAACkB,KAAR,CAAcD,GAAd;AACD;AACF,GA5BD;;AA8BA,QAAME,eAAe,GAAG,MAAOhB,CAAP,IAAa;AACnC,QAAI,CAACtB,KAAL,EAAY;AACV,UAAI4B,OAAO,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACC,OAAD,CAAb;AACD,KAHD,MAGO;AACL,YAAMW,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBzC,KAAxB;AACAuC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC1C,MAAjC;AACA,YAAM2C,GAAG,GAAG,MAAM3D,KAAK,CAAC8C,IAAN,CAAW/B,GAAX,EAAgByC,QAAhB,CAAlB;AACA,UAAIX,OAAO,GAAGc,GAAG,CAAC7C,IAAJ,CAAS8C,UAAvB;AACAhB,MAAAA,aAAa,CAACC,OAAD,CAAb;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGjB,MAAM,iBACL;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAA,iCACE;AAAK,YAAA,OAAO,EAAEO,UAAd;AAA0B,YAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,iCACE;AAAA,mCACE;AAAA,yBACGhB,QADH,eAEE;AAAM,gBAAA,YAAY,EAAC,KAAnB;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,EAAE,EAAC,qBADL;AAEE,kBAAA,KAAK,EAAC,MAFR;AAGE,kBAAA,WAAW,EAAEP,KAAK,CAACa,QAHrB;AAIE,kBAAA,SAAS,MAJX;AAKE,kBAAA,MAAM,EAAC,QALT;AAME,kBAAA,eAAe,EAAE;AACfoC,oBAAAA,MAAM,EAAE;AADO,mBANnB;AASE,kBAAA,QAAQ,EAAGtB,CAAD,IAAO;AACfb,oBAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASsB,KAAV,CAAX;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,SAAD;AACE,kBAAA,EAAE,EAAC,qBADL;AAEE,kBAAA,KAAK,EAAC,UAFR;AAGE,kBAAA,WAAW,EAAElD,KAAK,CAACW,GAHrB;AAIE,kBAAA,SAAS,MAJX;AAKE,kBAAA,MAAM,EAAC,QALT;AAME,kBAAA,eAAe,EAAE;AACfsC,oBAAAA,MAAM,EAAE;AADO,mBANnB;AASE,kBAAA,QAAQ,EAAGtB,CAAD,IAAO;AACff,oBAAAA,MAAM,CAACe,CAAC,CAACC,MAAF,CAASsB,KAAV,CAAN;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,wBAdF,eA2BE;AACE,kBAAA,SAAS,EAAEjD,OAAO,CAACP,IADrB;AAEE,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,MAAM,EAAE;AAAV,mBAFT;AAGE,kBAAA,SAAS,EAAC,WAHZ;AAAA,0CAKE;AACE,oBAAA,MAAM,EAAC,SADT;AAEE,oBAAA,SAAS,EAAEM,OAAO,CAACJ,KAFrB;AAGE,oBAAA,EAAE,EAAC,uBAHL;AAIE,oBAAA,QAAQ,MAJV;AAKE,oBAAA,IAAI,EAAC,MALP;AAME,oBAAA,QAAQ,EAAE6B;AANZ;AAAA;AAAA;AAAA;AAAA,0BALF,eAaE;AAAO,oBAAA,OAAO,EAAC,uBAAf;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3BF,eA8CE;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,OAAO,EAAC,WADV;AAEE,oBAAA,KAAK,EAAE;AAAEyB,sBAAAA,KAAK,EAAE,GAAT;AAAcC,sBAAAA,eAAe,EAAE;AAA/B,qBAFT;AAGE,oBAAA,OAAO,EAAET,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFJ,eAsFE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEzB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD;;GA7KuBnB,S;UACNP,S;;;KADMO,S","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function EditModal(props) {\n  const classes = useStyles();\n  const data = useContext(UserContext);\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    console.log(image);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const updateProfile = async (photoId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/users/\" + props.username + \"/update/\",\n        {\n          bio: bio,\n          fullName: fullName,\n          bioPhotoId: photoId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href =  \"http://localhost:3001/profile/\" + props.username;\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let photoId = \"\";\n      updateProfile(photoId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let photoId = res.data.secure_url;\n      updateProfile(photoId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <div>\n                  {errorMsg}\n                  <form autoComplete=\"off\">\n                    <TextField\n                      id=\"standard-full-width\"\n                      label=\"Name\"\n                      placeholder={props.fullName}\n                      fullWidth\n                      margin=\"normal\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={(e) => {\n                        setFullName(e.target.value);\n                      }}\n                    />\n                    <TextField\n                      id=\"standard-full-width\"\n                      label=\"Your Bio\"\n                      placeholder={props.bio}\n                      fullWidth\n                      margin=\"normal\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={(e) => {\n                        setBio(e.target.value);\n                      }}\n                    />\n                    <div\n                      className={classes.root}\n                      style={{ margin: 30 }}\n                      className=\"uploadBtn\"\n                    >\n                      <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"contained-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={onChange}\n                      />\n                      <label htmlFor=\"contained-button-file\">\n                        <Button variant=\"contained\" component=\"span\">\n                          Update Bio Photo\n                        </Button>\n                      </label>\n                    </div>\n                    <div className=\"uploadBtn\">\n                      <Button\n                        variant=\"contained\"\n                        style={{ width: 290, backgroundColor: \"lightblue\" }}\n                        onClick={checkValidation}\n                      >\n                        Submit\n                      </Button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </main>\n            {/* {previewSource && (\n              <div className=\"previewDiv\">\n                <img\n                  src={previewSource}\n                  alt=\"chosen\"\n                  className=\"preview-image\"\n                />\n              </div>\n            )} */}\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Edit Bio\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}