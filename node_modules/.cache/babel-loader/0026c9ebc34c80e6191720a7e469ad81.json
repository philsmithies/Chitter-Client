{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"../Tweet/\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [tweetId, setTweetId] = useState();\n  const [allData, setAllData] = useState([]);\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  }; // use for individual links\n  // const getTweet = async () => {\n  //   try {\n  //     await axios\n  //       .get(\"http://localhost:3001/tweets/\" + tweetId)\n  //       .then((response) => {\n  //         console.log(response);\n  //       });\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tweets_feed\",\n      children: [console.log(value.author), /*#__PURE__*/_jsxDEV(Tweet, {\n        tweetId: value._id,\n        fullName: value.author.fullName,\n        publicId: value.author ? value.author.publicId : \"\",\n        text: value.text,\n        username: value.author ? value.author.username : \"\",\n        createdAt: value.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"LAYA9RUpQS8j2u5l2A0p/emwI74=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Tweet","Feed","tweetId","setTweetId","allData","setAllData","getTweets","then","response","data","console","log","catch","error","map","value","index","author","_id","fullName","publicId","text","username","createdAt"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,SAAS,GAAG,MAAM;AACtBP,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGQ,IADH,CACSC,QAAD,IAAc;AAClBH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KAJH,EAKGG,KALH,CAKUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBE,KAArC;AACD,KAPH;AAQD,GATD,CAJ6B,CAc7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACGF,OAAO,CAACU,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,iBACGN,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACE,MAAlB,CADH,eAEE,QAAC,KAAD;AACE,QAAA,OAAO,EAAEF,KAAK,CAACG,GADjB;AAEE,QAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,CAAaE,QAFzB;AAGE,QAAA,QAAQ,EAAEJ,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaG,QAA5B,GAAuC,EAHnD;AAIE,QAAA,IAAI,EAAEL,KAAK,CAACM,IAJd;AAKE,QAAA,QAAQ,EAAEN,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaK,QAA5B,GAAuC,EALnD;AAME,QAAA,SAAS,EAAEP,KAAK,CAACQ;AANnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjDuBtB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"../Tweet/\";\nimport \"./index.css\";\n\nexport default function Feed() {\n  const [tweetId, setTweetId] = useState();\n  const [allData, setAllData] = useState([]);\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  };\n  // use for individual links\n  \n  // const getTweet = async () => {\n  //   try {\n  //     await axios\n  //       .get(\"http://localhost:3001/tweets/\" + tweetId)\n  //       .then((response) => {\n  //         console.log(response);\n  //       });\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    getTweets();\n  }, []);\n\n  return (\n    <div>\n      {allData.map((value, index) => (\n        <div class=\"tweets_feed\">\n          {console.log(value.author)}\n          <Tweet\n            tweetId={value._id}\n            fullName={value.author.fullName}\n            publicId={value.author ? value.author.publicId : \"\"}\n            text={value.text}\n            username={value.author ? value.author.username : \"\"}\n            createdAt={value.createdAt}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}