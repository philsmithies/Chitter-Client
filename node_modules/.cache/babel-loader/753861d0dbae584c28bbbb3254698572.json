{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Tweet is:\", value.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User is:\", value.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), \"Feed\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"wvSF2ckxQjUNASfZMrdtN9Q7fbY=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Feed","allData","setAllData","then","response","data","catch","error","console","log","map","value","index","body","username"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGI,IADH,CACSC,QAAD,IAAc;AAClBF,MAAAA,UAAU,CAACE,QAAQ,CAACC,IAAV,CAAV;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBF,KAArC;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,eACGN,OAAO,CAACS,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAA,8BACE;AAAA,gCAAkBD,KAAK,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAYF,KAAK,CAACG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzBuBd,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nexport default function Feed() {\n  const [allData, setAllData] = useState([]);\n\n\n  useEffect(() => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  }, []);\n\n  return(\n    <div>\n      {allData.map((value, index) => (\n        <div>\n          <strong>Tweet is:{value.body}</strong>\n          <p>User is:{value.username}</p>\n        </div>\n      ))}\n      Feed\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}