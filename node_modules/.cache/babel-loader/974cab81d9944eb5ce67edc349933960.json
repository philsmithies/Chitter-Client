{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/pages/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport { useParams } from \"react-router-dom\";\nimport Tweet from \"../../components/Tweet/\";\nimport ExploreBar from \"../../components/ExploreBar\";\nimport EditModal from \"../../components/EditModal\";\nimport SignUpBar from \"../../components/SignUpBar\";\nimport ProfileWrapper from \"../../components/ProfileWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const [data, setData] = useState();\n  const [tweets, setTweets] = useState();\n  const {\n    userId\n  } = useParams();\n\n  const getProfileData = function (userId) {\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\"\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId\n      }).then(res => {\n        setData(res.data); // console.log(data.bioPhotoId);\n      });\n    }\n  };\n\n  const getTweets = async () => {\n    try {\n      await axios.get(\"http://localhost:3001/users/\" + userId + \"/tweets/\").then(response => {\n        setTweets(response.data);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    console.log(userId);\n    getProfileData(userId);\n    getTweets();\n  }, []);\n\n  const EditButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"huhhuhuh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile_grid\",\n    children: [data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileWrapper, {\n        username: data.username,\n        bio: data.bio ? data.bio : \"New Chipper\",\n        fullName: data.fullName,\n        length: tweets ? tweets.length : \"\",\n        cloudName: \"chitter\",\n        publicId: data.publicId,\n        bioPhotoId: data.bioPhotoId,\n        createdAt: data.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"editButton\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), tweets ? tweets.map((value, index) => /*#__PURE__*/_jsxDEV(Tweet, {\n          fullName: value.author.fullName,\n          publicId: value.author ? value.author.publicId : \"\",\n          imageUrl: value.author.imageUrl ? value.author.imageUrl : \"\",\n          text: value.text,\n          username: value.author ? value.author.username : \"\",\n          createdAt: value.createdAt\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(ExploreBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupbar\",\n      children: [/*#__PURE__*/_jsxDEV(SignUpBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"53We87wCvqtEBF3TCaXYk09X4JQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/pages/Profile/index.js"],"names":["React","useEffect","useState","axios","useParams","Tweet","ExploreBar","EditModal","SignUpBar","ProfileWrapper","Profile","data","setData","tweets","setTweets","userId","getProfileData","method","withCredentials","url","then","res","console","log","getTweets","get","response","err","error","EditButton","username","bio","fullName","length","publicId","bioPhotoId","createdAt","map","value","index","author","imageUrl","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaX,SAAS,EAA5B;;AAEA,QAAMY,cAAc,GAAG,UAAUD,MAAV,EAAkB;AACvC,QAAI,CAACA,MAAL,EAAa;AACXZ,MAAAA,KAAK,CAAC;AACJc,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE;AAHD,OAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACV,IAAhB;AACAC,QAAAA,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP;AACD,OAPD;AAQD,KATD,MASO;AACLR,MAAAA,KAAK,CAAC;AACJc,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE,mCAAmCJ;AAHpC,OAAD,CAAL,CAIGK,IAJH,CAISC,GAAD,IAAS;AACfT,QAAAA,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP,CADe,CAEf;AACD,OAPD;AAQD;AACF,GApBD;;AAsBA,QAAMa,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMrB,KAAK,CACRsB,GADG,CACC,iCAAiCV,MAAjC,GAA0C,UAD3C,EAEHK,IAFG,CAEGM,QAAD,IAAc;AAClBZ,QAAAA,SAAS,CAACY,QAAQ,CAACf,IAAV,CAAT;AACD,OAJG,CAAN;AAKD,KAND,CAME,OAAOgB,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD;AACF,GAVD;;AAYA1B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAC,IAAAA,cAAc,CAACD,MAAD,CAAd;AACAS,IAAAA,SAAS;AACV,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,UAAU,GAAG,MAAM;AACrB,wBACA;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKH,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eACGlB,IAAI,gBACH;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,IAAI,CAACmB,QADjB;AAEE,QAAA,GAAG,EAAEnB,IAAI,CAACoB,GAAL,GAAWpB,IAAI,CAACoB,GAAhB,GAAsB,aAF7B;AAGE,QAAA,QAAQ,EAAEpB,IAAI,CAACqB,QAHjB;AAIE,QAAA,MAAM,EAAEnB,MAAM,GAAGA,MAAM,CAACoB,MAAV,GAAmB,EAJnC;AAKE,QAAA,SAAS,EAAC,SALZ;AAME,QAAA,QAAQ,EAAEtB,IAAI,CAACuB,QANjB;AAOE,QAAA,UAAU,EAAEvB,IAAI,CAACwB,UAPnB;AAQE,QAAA,SAAS,EAAExB,IAAI,CAACyB;AARlB;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEGvB,MAAM,GACHA,MAAM,CAACwB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,KAAD;AAEE,UAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaR,QAFzB;AAGE,UAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaN,QAA5B,GAAuC,EAHnD;AAIE,UAAA,QAAQ,EAAEI,KAAK,CAACE,MAAN,CAAaC,QAAb,GAAwBH,KAAK,CAACE,MAAN,CAAaC,QAArC,GAAgD,EAJ5D;AAKE,UAAA,IAAI,EAAEH,KAAK,CAACI,IALd;AAME,UAAA,QAAQ,EAAEJ,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAAN,CAAaV,QAA5B,GAAuC,EANnD;AAOE,UAAA,SAAS,EAAEQ,KAAK,CAACF;AAPnB,WACOG,KADP;AAAA;AAAA;AAAA;AAAA,gBADF,CADG,GAYH,EAdN;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GA6BD,IA9BN,eA+BE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF,eAkCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA9FuB7B,O;UAGHN,S;;;KAHGM,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport { useParams } from \"react-router-dom\";\nimport Tweet from \"../../components/Tweet/\";\nimport ExploreBar from \"../../components/ExploreBar\";\nimport EditModal from \"../../components/EditModal\";\nimport SignUpBar from \"../../components/SignUpBar\";\nimport ProfileWrapper from \"../../components/ProfileWrapper\";\n\nexport default function Profile() {\n  const [data, setData] = useState();\n  const [tweets, setTweets] = useState();\n  const { userId } = useParams();\n\n  const getProfileData = function (userId) {\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\",\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId,\n      }).then((res) => {\n        setData(res.data);\n        // console.log(data.bioPhotoId);\n      });\n    }\n  };\n\n  const getTweets = async () => {\n    try {\n      await axios\n        .get(\"http://localhost:3001/users/\" + userId + \"/tweets/\")\n        .then((response) => {\n          setTweets(response.data);\n        });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    console.log(userId)\n    getProfileData(userId);\n    getTweets();\n  }, []);\n\n  const EditButton = () => {\n      return (\n      <div>\n        <p>huhhuhuh</p>\n      </div>\n        )\n  }\n\n  return (\n    <div className=\"profile_grid\">\n      {data ? (\n        <div className=\"profile_wrapper\">\n          <ProfileWrapper\n            username={data.username}\n            bio={data.bio ? data.bio : \"New Chipper\"}\n            fullName={data.fullName}\n            length={tweets ? tweets.length : \"\"}\n            cloudName=\"chitter\"\n            publicId={data.publicId}\n            bioPhotoId={data.bioPhotoId}\n            createdAt={data.createdAt}\n          />\n          <div className=\"profile_content\">\n          <editButton/>\n            {tweets\n              ? tweets.map((value, index) => (\n                  <Tweet\n                    key={index}\n                    fullName={value.author.fullName}\n                    publicId={value.author ? value.author.publicId : \"\"}\n                    imageUrl={value.author.imageUrl ? value.author.imageUrl : \"\"}\n                    text={value.text}\n                    username={value.author ? value.author.username : \"\"}\n                    createdAt={value.createdAt}\n                  />\n                ))\n              : ''}\n          </div>\n        </div>\n      ) : null}\n      <div className=\"sidebar\">\n        <ExploreBar />\n      </div>\n      <div className=\"signupbar\">\n        <SignUpBar />\n        <EditButton/>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}