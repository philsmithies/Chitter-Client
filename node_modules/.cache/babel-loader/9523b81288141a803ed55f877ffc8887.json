{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TweetModal(props) {\n  _s();\n\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = '/signup';\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  }; // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    try {\n      await Axios.post(\"http://localhost:3001/tweets/\" + data.username + \"/create/\", {\n        text: tweet,\n        author: data\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: newTweet,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Whats on your mind?\",\n                required: true,\n                onChange: e => {\n                  setTweet(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submitBtn\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetModal, \"M12z9wmjzf9R9ne8o3gpHrzNfTc=\");\n\n_c = TweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js"],"names":["React","useState","Axios","useContext","UserContext","TweetModal","props","data","isOpen","setIsOpen","openModal","link","window","location","href","closeModal","console","log","onChange","e","setImage","target","files","file","previewFile","tweet","setTweet","newTweet","post","username","text","author","withCredentials","then","response","err","error","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nexport default function TweetModal(props) {\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    if(props.link){\n      window.location.href='/signup';\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0]\n    previewFile(file)\n  };\n\n  // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/tweets/\" + data.username + \"/create/\",\n        {\n          text: tweet,\n          author: data\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <form onSubmit={newTweet}>\n                  <input\n                    type=\"text\"\n                    id=\"tweet\"\n                    name=\"tweet\"\n                    placeholder=\"Whats on your mind?\"\n                    required\n                    onChange={(e) => {\n                      setTweet(e.target.value);\n                    }}\n                  />\n                  <button className=\"submitBtn\">\n                    <p>Tweet</p>\n                  </button>\n                </form>\n              </div>\n            </main>\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Tweet\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}