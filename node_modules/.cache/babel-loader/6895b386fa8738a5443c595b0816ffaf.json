{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, setState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TweetModal() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    console.log('closed');\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClick = e => {\n      if (e.target.className !== \"modal\" && !isOpen) {\n        console.log('clicked');\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      console.log('open');\n      window.addEventListener(\"click\", handleClick);\n    }\n  }, [isOpen]);\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    try {\n      await Axios.post(\"http://localhost:3001/new\", {\n        tweet: tweet\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Modal Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: newTweet,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"body\",\n                children: \"Tweet:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                required: true,\n                onChange: e => {\n                  setTweet(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetModal, \"hRltZrGqrj1DrCKZPx61riyL8pw=\");\n\n_c = TweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js"],"names":["React","useEffect","useState","setState","Axios","TweetModal","isOpen","setIsOpen","openModal","closeModal","console","log","handleClick","e","target","className","window","addEventListener","tweet","setTweet","newTweet","post","withCredentials","then","response","data","location","href","err","error","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, setState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\n\nexport default function TweetModal() {\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    console.log('closed')\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClick = (e) => {\n      if (e.target.className !== \"modal\" && !isOpen) {\n        console.log('clicked')\n        setIsOpen(false);\n      }\n    };\n    if (isOpen) {\n      console.log('open')\n      window.addEventListener(\"click\", handleClick);\n    }\n  }, [isOpen]);\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/new\",\n        {\n          tweet: tweet,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <h2>Modal Title</h2>\n              <button onClick={closeModal} className=\"close-button\">\n                &times;\n              </button>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <form onSubmit={newTweet}>\n                  <label for=\"body\">Tweet:</label>\n                  <input\n                    type=\"text\"\n                    id=\"tweet\"\n                    name=\"tweet\"\n                    required\n                    onChange={(e) => {\n                      setTweet(e.target.value);\n                    }}\n                  />\n                  <button>Submit</button>\n                </form>\n              </div>\n            </main>\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Tweet\n      </button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}