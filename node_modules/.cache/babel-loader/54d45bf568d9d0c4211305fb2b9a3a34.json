{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/EditModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditModal(props) {\n  _s();\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n  const [bio, setBio] = useState(\"\");\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader(); // reads the file as url to create preview\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  }; // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n\n  const editBio = async () => {\n    // const formData = new FormData();\n    // formData.append(\"file\", image);\n    // formData.append(\"upload_preset\", preset);\n    // const res = await Axios.post(url, formData);\n    try {\n      await Axios.post(\"http://localhost:3001/\" + props.username + \"/update/\", {\n        bio: bio\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data) {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"There was a problem\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Set Your Bio\",\n                required: true,\n                onChange: e => {\n                  setBio(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submitBtn\",\n                onClick: editBio(),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Edit Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"Ht7WtF+0kphry5fMgbbNc9x6b10=\");\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/EditModal/index.js"],"names":["React","useState","Axios","useContext","Button","UserContext","EditModal","props","url","preset","data","isOpen","setIsOpen","image","setImage","previewSource","setPreviewSource","errorMsg","setErrorMsg","tweet","setTweet","newMsgTimeoutHandle","bio","setBio","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","file","previewFile","reader","FileReader","readAsDataURL","onloadend","result","editBio","post","username","withCredentials","then","response","clearTimeout","setTimeout","err","error","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nexport default function EditModal(props) {\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const [bio, setBio] = useState(\"\");\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    // reads the file as url to create preview\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n\n  // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n  const editBio = async () => {\n    // const formData = new FormData();\n    // formData.append(\"file\", image);\n    // formData.append(\"upload_preset\", preset);\n    // const res = await Axios.post(url, formData);\n    try {\n      await Axios.post(\n        \"http://localhost:3001/\" + props.username + \"/update/\",\n        {\n          bio: bio,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data) {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\n            \"There was a problem\"\n          );\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <form>\n                  <input\n                    type=\"text\"\n                    id=\"tweet\"\n                    name=\"tweet\"\n                    placeholder=\"Set Your Bio\"\n                    required\n                    onChange={(e) => {\n                      setBio(e.target.value);\n                    }}\n                  />\n                  <button className=\"submitBtn\" onClick={editBio()}>\n                    <p>Edit</p>\n                  </button>\n                  {/* {!previewSource && (\n                    <div className=\"addPhotoBtn\">\n                      <Button variant=\"contained\" component=\"label\">\n                        Add a Photo\n                        <input\n                          accept=\"image/*\"\n                          id=\"contained-button-file\"\n                          multiple\n                          type=\"file\"\n                          style={{ display: \"none\" }}\n                          onChange={onChange}\n                        />\n                      </Button>\n                    </div>\n                  )} */}\n                </form>\n              </div>\n            </main>\n            {previewSource && (\n              <div className=\"previewDiv\">\n                <img\n                  src={previewSource}\n                  alt=\"chosen\"\n                  className=\"preview-image\"\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Edit Bio\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}