{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/EditModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function EditModal(props) {\n  _s();\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const data = useContext(UserContext);\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    console.log(e.target.files[0]);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader(); // reads the file as url to create preview\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const editBio = async publicId => {\n    try {\n      await Axios.post(\"http://localhost:3001/users/\" + props.username + \"/update/\", {\n        bio: bio,\n        fullName: fullName,\n        bioPhotoId: publicId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Bio Updated\") {\n          window.location.href = \"http://localhost:3001/users/\" + props.username;\n        } else if (response.data !== \"Bio Updated\") {\n          setErrorMsg(\"Bio Not Updated\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async e => {\n    if (!image) {\n      let publicId = \"\";\n      editBio(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      editBio(publicId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Set Your Bio\",\n                required: true,\n                onChange: e => {\n                  setBio(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Set Your Name\",\n                required: true,\n                onChange: e => {\n                  setFullName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                style: {\n                  margin: 30\n                },\n                className: \"uploadBtn\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  accept: \"image/*\",\n                  className: classes.input,\n                  id: \"contained-button-file\",\n                  multiple: true,\n                  type: \"file\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"contained-button-file\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    component: \"span\",\n                    children: \"Upload Profile Picture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: checkValidation,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Edit Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"o05pu1T2ZH56DnhsI6Bc4CwWelg=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/EditModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","useStyles","theme","root","margin","spacing","input","display","EditModal","props","url","preset","data","classes","isOpen","setIsOpen","image","setImage","bio","setBio","fullName","setFullName","previewSource","setPreviewSource","errorMsg","setErrorMsg","newMsgTimeoutHandle","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","componentWillUnmount","clearTimeout","editBio","publicId","post","username","bioPhotoId","withCredentials","then","response","setTimeout","err","error","checkValidation","formData","FormData","append","res","secure_url","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function EditModal(props) {\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n\n  const data = useContext(UserContext);\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [image, setImage] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  let newMsgTimeoutHandle = 0;\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    console.log(e.target.files[0])\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    // reads the file as url to create preview\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const editBio = async (publicId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/users/\" + props.username + \"/update/\",\n        {\n          bio: bio,\n          fullName: fullName,\n          bioPhotoId: publicId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Bio Updated\") {\n          window.location.href = \"http://localhost:3001/users/\" + props.username;\n        } else if (response.data !== \"Bio Updated\") {\n          setErrorMsg(\"Bio Not Updated\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let publicId = \"\";\n      editBio(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      editBio(publicId);\n    }\n  };\n\n  return(\n    <div className=\"App\">\n    {isOpen && (\n      <>\n        <div className=\"overlay\"></div>\n        <div className=\"modal\">\n          <header className=\"modal__header\">\n            <div onClick={closeModal} className=\"close-button\">\n              &times;\n            </div>\n          </header>\n          <main className=\"modal__main\">\n            <div>\n              <form>\n                <input\n                  type=\"text\"\n                  id=\"tweet\"\n                  name=\"tweet\"\n                  placeholder=\"Set Your Bio\"\n                  required\n                  onChange={(e) => {\n                    setBio(e.target.value);\n                  }}\n                />\n                <input\n                  type=\"text\"\n                  id=\"tweet\"\n                  name=\"tweet\"\n                  placeholder=\"Set Your Name\"\n                  required\n                  onChange={(e) => {\n                    setFullName(e.target.value);\n                  }}\n                />\n\n<div\n          className={classes.root}\n          style={{ margin: 30 }}\n          className=\"uploadBtn\"\n        >\n          \n          <input\n            required\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" component=\"span\">\n              Upload Profile Picture\n            </Button>\n          </label>\n        </div>\n\n                <button onClick={checkValidation}>\n                  <p>Edit</p>\n                </button>\n              </form>\n            </div>\n          </main>\n          {previewSource && (\n            <div className=\"previewDiv\">\n              <img\n                src={previewSource}\n                alt=\"chosen\"\n                className=\"preview-image\"\n              />\n            </div>\n          )}\n        </div>\n      </>\n    )}\n\n    <button className=\"button\" onClick={openModal}>\n      Edit Bio\n    </button>\n  </div>\n);\n  \n}"]},"metadata":{},"sourceType":"module"}