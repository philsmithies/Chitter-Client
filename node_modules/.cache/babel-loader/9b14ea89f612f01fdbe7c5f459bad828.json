{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function SignUpForm() {\n  _s();\n\n  const classes = useStyles();\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [passwordMsg, setPasswordMsg] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [emailReg, setEmailReg] = useState(\"\");\n  const [passwordReg, setPasswordReg] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [usernameReg, setUsernameReg] = useState(\"\");\n  const [fullNameReg, setFullNameReg] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordConfirmError, setPasswordConfirmError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [userMsg, setUserMsg] = useState(\"\");\n  const emailRegex = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n  const userRegex = new RegExp(\"\\\\s+\");\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n\n    try {\n      await Axios.post(\"http://localhost:3001/signup_post\", {\n        username: usernameReg,\n        fullName: fullNameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: imageUrl\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setErrorMsg(\"User already exists, please sign in or create new account\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const registerNoPhoto = async () => {\n    try {\n      await Axios.post(\"http://localhost:3001/signup\", {\n        username: usernameReg,\n        fullName: fullNameReg,\n        password: passwordReg,\n        email: emailReg,\n        publicId: ''\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setErrorMsg(\"User already exists, please sign in or create new account\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = e => {\n    if (!emailRegex.test(emailReg)) {\n      setEmailError(true);\n      setEmailMsg(\"Not a valid email address\");\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setEmailMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (passwordReg !== confirmPassword) {\n      setPasswordMsg(\"Passwords do not match\");\n      setPasswordConfirmError(true);\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setPasswordMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (usernameReg === \"\" || userRegex.test(usernameReg)) {\n      setUserMsg(\"Please enter a valid username without spaces\");\n      setUsernameError(true);\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setUserMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (image) {\n      register();\n    } else {\n      registerNoPhoto();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errorMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        error: usernameError,\n        helperText: userMsg,\n        id: \"standard-full-width\",\n        label: \"username\",\n        placeholder: \"@jim\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setUsernameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-full-width\",\n        label: \"full name\",\n        placeholder: \"JimBob\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setFullNameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: emailError,\n        helperText: emailMsg,\n        type: \"email\",\n        id: \"standard-full-width\",\n        label: \"email\",\n        placeholder: \"jack@chitter.com\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setEmailReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        id: \"standard-full-width\",\n        label: \"password\",\n        placeholder: \"***********\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setPasswordReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: passwordConfirmError,\n        helperText: passwordMsg,\n        type: \"password\",\n        id: \"standard-full-width\",\n        label: \"confirm password\",\n        placeholder: \"***********\",\n        fullWidth: true,\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        style: {\n          margin: 30\n        },\n        className: \"uploadBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          accept: \"image/*\",\n          className: classes.input,\n          id: \"contained-button-file\",\n          multiple: true,\n          type: \"file\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            children: \"Upload Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            width: 290,\n            backgroundColor: \"lightblue\"\n          },\n          onClick: checkValidation,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"BttnAm8QRSQp50i2fbI91EAyDOw=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/SignUpForm/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useStyles","theme","root","margin","spacing","input","display","SignUpForm","classes","url","preset","passwordMsg","setPasswordMsg","image","setImage","emailReg","setEmailReg","passwordReg","setPasswordReg","confirmPassword","setConfirmPassword","usernameReg","setUsernameReg","fullNameReg","setFullNameReg","usernameError","setUsernameError","emailError","setEmailError","passwordConfirmError","setPasswordConfirmError","errorMsg","setErrorMsg","emailMsg","setEmailMsg","userMsg","setUserMsg","emailRegex","RegExp","userRegex","newMsgTimeoutHandle","onChange","e","target","files","componentWillUnmount","clearTimeout","register","formData","FormData","append","res","post","imageUrl","data","secure_url","username","fullName","password","email","publicId","withCredentials","then","response","console","log","window","location","href","setTimeout","err","error","registerNoPhoto","checkValidation","test","shrink","value","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function SignUpForm() {\n  const classes = useStyles();\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [passwordMsg, setPasswordMsg] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [emailReg, setEmailReg] = useState(\"\");\n  const [passwordReg, setPasswordReg] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [usernameReg, setUsernameReg] = useState(\"\");\n  const [fullNameReg, setFullNameReg] = useState(\"\");\n\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordConfirmError, setPasswordConfirmError] = useState(false);\n\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [userMsg, setUserMsg] = useState(\"\");\n\n  const emailRegex = new RegExp(\n    \"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\"\n  );\n\n  const userRegex = new RegExp(\"\\\\s+\");\n\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const register = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", preset);\n    const res = await Axios.post(url, formData);\n    const imageUrl = res.data.secure_url;\n    try {\n      await Axios.post(\n        \"http://localhost:3001/signup_post\",\n        {\n          username: usernameReg,\n          fullName: fullNameReg,\n          password: passwordReg,\n          email: emailReg,\n          publicId: imageUrl,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setErrorMsg(\n            \"User already exists, please sign in or create new account\"\n          );\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const registerNoPhoto = async () => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/signup\",\n        {\n          username: usernameReg,\n          fullName: fullNameReg,\n          password: passwordReg,\n          email: emailReg,\n          publicId: '',\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"User Created\") {\n          window.location.href = \"/login\";\n        } else if (response.data !== \"User Created\") {\n          setErrorMsg(\n            \"User already exists, please sign in or create new account\"\n          );\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 6500);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const checkValidation = (e) => {\n    if (!emailRegex.test(emailReg)) {\n      setEmailError(true);\n      setEmailMsg(\"Not a valid email address\");\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setEmailMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (passwordReg !== confirmPassword) {\n      setPasswordMsg(\"Passwords do not match\");\n      setPasswordConfirmError(true);\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setPasswordMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (usernameReg === \"\" || userRegex.test(usernameReg)) {\n      setUserMsg(\"Please enter a valid username without spaces\");\n      setUsernameError(true);\n      clearTimeout(newMsgTimeoutHandle);\n      newMsgTimeoutHandle = setTimeout(() => {\n        setUserMsg(\"\");\n        newMsgTimeoutHandle = 0;\n      }, 6500);\n    } else if (image) {\n      register();\n    } else {\n      registerNoPhoto()\n    }\n  };\n\n  return (\n    <div>\n      {errorMsg}\n      <form autoComplete=\"off\">\n        <TextField\n          error={usernameError}\n          helperText={userMsg}\n          id=\"standard-full-width\"\n          label=\"username\"\n          placeholder=\"@jim\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setUsernameReg(e.target.value);\n          }}\n        />\n        <TextField\n          id=\"standard-full-width\"\n          label=\"full name\"\n          placeholder=\"JimBob\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setFullNameReg(e.target.value);\n          }}\n        />\n        <TextField\n          error={emailError}\n          helperText={emailMsg}\n          type=\"email\"\n          id=\"standard-full-width\"\n          label=\"email\"\n          placeholder=\"jack@chitter.com\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setEmailReg(e.target.value);\n          }}\n        />\n        <TextField\n          type=\"password\"\n          id=\"standard-full-width\"\n          label=\"password\"\n          placeholder=\"***********\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setPasswordReg(e.target.value);\n          }}\n        />\n        <TextField\n          error={passwordConfirmError}\n          helperText={passwordMsg}\n          type=\"password\"\n          id=\"standard-full-width\"\n          label=\"confirm password\"\n          placeholder=\"***********\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={(e) => {\n            setConfirmPassword(e.target.value);\n          }}\n        />\n        <div\n          className={classes.root}\n          style={{ margin: 30 }}\n          className=\"uploadBtn\"\n        >\n          <input\n          required\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" component=\"span\">\n              Upload Profile Picture\n            </Button>\n          </label>\n        </div>\n        <div   className=\"uploadBtn\">\n          <Button\n            variant=\"contained\"\n            style={{width: 290, backgroundColor: \"lightblue\" }}\n            onClick={checkValidation}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}