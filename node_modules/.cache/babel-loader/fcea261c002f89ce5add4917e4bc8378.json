{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [data, setData] = useState();\n  const [allData, setAllData] = useState([]);\n  const userId = \"pp\";\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\"\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId\n      }).then(res => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\").then(response => {\n      setAllData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting data: \" + error);\n    });\n  };\n\n  useEffect(() => {\n    getProfilePhoto(userId);\n    getTweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: data ? data.publicID : 'nothing to see here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), allData.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tweets_feed\",\n      children: /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: value.body,\n        username: value.username,\n        createdAt: value.createdAt,\n        publicID: data ? data.publicID : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"ImQ3OMudnjoWhozDdSXfKORHvE0=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/Feed/index.js"],"names":["useState","useEffect","axios","Tweet","Feed","data","setData","allData","setAllData","userId","getProfilePhoto","console","log","method","withCredentials","url","then","res","getTweets","response","catch","error","publicID","map","value","index","body","username","createdAt"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMS,MAAM,GAAG,IAAf;;AAEA,QAAMC,eAAe,GAAG,UAAUD,MAAV,EAAkB;AACxCE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAI,CAACH,MAAL,EAAa;AACXP,MAAAA,KAAK,CAAC;AACJW,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE;AAHD,OAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACZ,IAAhB;AACAC,QAAAA,OAAO,CAACW,GAAG,CAACZ,IAAL,CAAP;AACD,OAPD;AAQD,KATD,MASO;AACLH,MAAAA,KAAK,CAAC;AACJW,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,eAAe,EAAE,IAFb;AAGJC,QAAAA,GAAG,EAAE,mCAAmCN;AAHpC,OAAD,CAAL,CAIGO,IAJH,CAISC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACZ,IAAhB;AACAC,QAAAA,OAAO,CAACW,GAAG,CAACZ,IAAL,CAAP;AACD,OAPD;AAQD;AACF,GArBD;;AAuBA,QAAMa,SAAS,GAAG,MAAM;AACtBhB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGc,IADH,CACSG,QAAD,IAAc;AAClBX,MAAAA,UAAU,CAACW,QAAQ,CAACd,IAAV,CAAV;AACD,KAHH,EAIGe,KAJH,CAIUC,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBS,KAArC;AACD,KANH;AAOD,GARD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,eAAe,CAACD,MAAD,CAAf;AACAS,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACY;AAAA,gBAAIb,IAAI,GAAGA,IAAI,CAACiB,QAAR,GAAmB;AAA3B;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGf,OAAO,CAACgB,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAED,KAAK,CAACE,IAApB;AAA0B,QAAA,QAAQ,EAAEF,KAAK,CAACG,QAA1C;AAAoD,QAAA,SAAS,EAAEH,KAAK,CAACI,SAArE;AAAgF,QAAA,QAAQ,EAAEvB,IAAI,GAAGA,IAAI,CAACiB,QAAR,GAAmB;AAAjH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxDuBlB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Tweet from '../Tweet/'\nimport './index.css'\n\nexport default function Feed() {\n  const [data, setData] = useState();\n  const [allData, setAllData] = useState([]);\n\n  const userId = \"pp\"\n\n  const getProfilePhoto = function (userId) {\n    console.log(\"getProfileData\");\n    if (!userId) {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile\",\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    } else {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/profile/\" + userId,\n      }).then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      });\n    }\n  };\n\n  const getTweets = () => {\n    axios(\"http://localhost:3001/tweets\")\n      .then((response) => {\n        setAllData(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error getting data: \" + error);\n      });\n  }\n\n\n  useEffect(() => {\n    getProfilePhoto(userId);\n    getTweets()\n  }, []);\n\n  return(\n    <div>\n                <p>{data ? data.publicID : 'nothing to see here'}</p>\n      {allData.map((value, index) => (\n        <div class=\"tweets_feed\">\n\n          <Tweet tweet={value.body} username={value.username} createdAt={value.createdAt} publicID={data ? data.publicID : ''}/>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}