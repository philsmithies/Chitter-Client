{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TweetModal(props) {\n  _s();\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader(); // reads the file as url to create preview\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  }; // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", preset);\n\n    try {\n      const res = await Axios.post(url, formData);\n      const publicId = res.data.secure_url;\n      await Axios.post(\"http://localhost:3001/tweets/\" + data.username + \"/create/\", {\n        text: tweet,\n        author: data,\n        publicId: publicId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: newTweet,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Whats on your mind?\",\n                required: true,\n                onChange: e => {\n                  setTweet(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submitBtn\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addPhotoBtn\",\n                children: !previewSource && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  children: [\"Add a Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    accept: \"image/*\",\n                    id: \"contained-button-file\",\n                    multiple: true,\n                    type: \"file\",\n                    style: {\n                      display: \"none\"\n                    },\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TweetModal, \"5O6IIofx4RHu5N16Kt7d4rQiRrM=\");\n\n_c = TweetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetModal\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/TweetModal/index.js"],"names":["React","useState","Axios","useContext","Button","UserContext","TweetModal","props","url","preset","data","isOpen","setIsOpen","image","setImage","previewSource","setPreviewSource","openModal","link","window","location","href","closeModal","console","log","onChange","e","target","files","file","previewFile","reader","FileReader","readAsDataURL","onloadend","result","tweet","setTweet","newTweet","formData","FormData","append","res","post","publicId","secure_url","username","text","author","withCredentials","then","response","err","error","value","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport Axios from \"axios\";\nimport { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nexport default function TweetModal(props) {\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const data = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [image, setImage] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n\n  const openModal = () => {\n    if (props.link) {\n      window.location.href = \"/signup\";\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    console.log(\"closed\");\n    setIsOpen(false);\n  };\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    // reads the file as url to create preview\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  // useEffect(() => {\n  //   const handleClick = (e) => {\n  //     if (e.target.className !== \"modal\" && e.target.className !== \"button\") {\n  //       closeModal()\n  //     }\n  //   };\n  //   if (isOpen) {\n  //     console.log('open')\n  //     window.addEventListener(\"click\", handleClick);\n  //   }\n  // }, [isOpen]);\n\n  const [tweet, setTweet] = useState(\"\");\n\n  const newTweet = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", preset);\n    try {\n      const res = await Axios.post(url, formData);\n      const publicId = res.data.secure_url;\n      await Axios.post(\n        \"http://localhost:3001/tweets/\" + data.username + \"/create/\",\n        {\n          text: tweet,\n          author: data,\n          publicId: publicId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data) {\n          window.location.href = \"/\";\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isOpen && (\n        <>\n          <div className=\"overlay\"></div>\n          <div className=\"modal\">\n            <header className=\"modal__header\">\n              <div onClick={closeModal} className=\"close-button\">\n                &times;\n              </div>\n            </header>\n            <main className=\"modal__main\">\n              <div>\n                <form onSubmit={newTweet}>\n                  <input\n                    type=\"text\"\n                    id=\"tweet\"\n                    name=\"tweet\"\n                    placeholder=\"Whats on your mind?\"\n                    required\n                    onChange={(e) => {\n                      setTweet(e.target.value);\n                    }}\n                  />\n                  <button className=\"submitBtn\">\n                    <p>Tweet</p>\n                  </button>\n                  <div className=\"addPhotoBtn\">\n                  {!previewSource && (\n                  <Button  variant=\"contained\" component=\"label\">\n                  Add a Photo\n                  <input\n                    accept=\"image/*\"\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={onChange}\n                  />\n                </Button>\n            )}\n\n                  </div>\n                </form>\n              </div>\n            </main>\n            {previewSource && (\n              <div className=\"previewDiv\">\n              <img src={previewSource} alt=\"chosen\" className=\"preview-image\" />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      <button className=\"button\" onClick={openModal}>\n        Tweet\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}