{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/Contexts/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Axios from \"axios\"; // This will hold the context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst UserContextProvider = props => {\n  _s();\n\n  const [data, setData] = useState();\n  const [dataIsLoading, setDataIsLoading] = useState(true); // Fetch Method to get the data\n\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:3001/user\"\n    }).then(res => {\n      setData(res.data);\n      setDataIsLoading(false);\n    });\n  }, []);\n  const providerValue = {\n    data,\n    dataIsLoading\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: providerValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserContextProvider, \"hjGI+B0SId47lPrP/QCtuPdVae0=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/Contexts/UserContext.js"],"names":["React","useState","createContext","useEffect","Axios","UserContext","UserContextProvider","props","data","setData","dataIsLoading","setDataIsLoading","method","withCredentials","url","then","res","providerValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEP,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD,CAFqC,CAIrC;;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC;AACJQ,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,eAAe,EAAE,IAFb;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAAD,CAAL,CAIGC,IAJH,CAISC,GAAD,IAAS;AACfP,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACAG,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,QAAMM,aAAa,GAAG;AACpBT,IAAAA,IADoB;AAEpBE,IAAAA;AAFoB,GAAtB;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,aAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMZ,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nimport Axios from \"axios\";\n\n// This will hold the context\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [data, setData] = useState();\n  const [dataIsLoading, setDataIsLoading] = useState(true);\n\n  // Fetch Method to get the data\n  useEffect(() => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:3001/user\",\n    }).then((res) => {\n      setData(res.data);\n      setDataIsLoading(false);\n    });\n  }, []);\n\n  const providerValue = {\n    data,\n    dataIsLoading,\n  };\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}