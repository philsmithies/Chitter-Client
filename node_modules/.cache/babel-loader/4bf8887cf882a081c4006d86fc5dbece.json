{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Projects/chitter-react/src/components/EditModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nexport default function NewTweet() {\n  _s();\n\n  const classes = useStyles();\n  const data = useContext(UserContext);\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = e => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async publicId => {\n    try {\n      await Axios.post(\"http://localhost:3001/users/\" + props.username + \"/update/\", {\n        bio: bio,\n        fullName: fullName,\n        bioPhotoId: publicId\n      }, {\n        withCredentials: true\n      }).then(response => {\n        console.log(response);\n\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }; // const checkValidation = async (e) => {\n  //   if (!image) {\n  //     let publicId = \"\";\n  //     postTweet(publicId);\n  //   } else {\n  //     const formData = new FormData();\n  //     formData.append(\"file\", image);\n  //     formData.append(\"upload_preset\", preset);\n  //     const res = await Axios.post(url, formData);\n  //     let publicId = res.data.secure_url;\n  //     postTweet(publicId);\n  //   }\n  // };\n\n\n  const checkValidation = async e => {\n    if (!image) {\n      let publicId = \"why not\";\n      editBio(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      editBio(publicId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeModal,\n            className: \"close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"modal__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Set Your Bio\",\n                required: true,\n                onChange: e => {\n                  setBio(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"tweet\",\n                name: \"tweet\",\n                placeholder: \"Set Your Name\",\n                required: true,\n                onChange: e => {\n                  setFullName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                style: {\n                  margin: 30\n                },\n                className: \"uploadBtn\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  accept: \"image/*\",\n                  multiple: true,\n                  type: \"file\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submitBtn\",\n                onClick: checkValidation,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSource,\n            alt: \"chosen\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: openModal,\n      children: \"Edit Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTweet, \"H7FZh8OGOpW8LJpCsoaZ7540nTk=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTweet\");","map":{"version":3,"sources":["/Users/phil/Projects/chitter-react/src/components/EditModal/index.js"],"names":["React","useState","TextField","Button","Axios","makeStyles","useContext","UserContext","useStyles","theme","root","margin","spacing","input","display","NewTweet","classes","data","url","preset","image","setImage","errorMsg","setErrorMsg","tweet","setTweet","newMsgTimeoutHandle","onChange","e","target","files","componentWillUnmount","clearTimeout","postTweet","publicId","post","props","username","bio","fullName","bioPhotoId","withCredentials","then","response","console","log","window","location","href","setTimeout","err","error","checkValidation","editBio","formData","FormData","append","res","secure_url","isOpen","closeModal","setBio","value","setFullName","previewSource","openModal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport default function NewTweet() {\n  const classes = useStyles();\n  const data = useContext(UserContext);\n\n  const url = \"https://api.cloudinary.com/v1_1/dryaxqxie/image/upload\";\n  const preset = \"chitter\";\n  const [image, setImage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [tweet, setTweet] = useState(\"\");\n\n  let newMsgTimeoutHandle = 0;\n\n  const onChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const componentWillUnmount = () => {\n    clearTimeout(newMsgTimeoutHandle);\n  };\n\n  const postTweet = async (publicId) => {\n    try {\n      await Axios.post(\n        \"http://localhost:3001/users/\" + props.username + \"/update/\",\n        {\n          bio: bio,\n          fullName: fullName,\n          bioPhotoId: publicId,\n        },\n        {\n          withCredentials: true,\n        }\n      ).then((response) => {\n        console.log(response);\n        if (response.data === \"Tweet Created\") {\n          window.location.href = \"/\";\n        } else if (response.data !== \"Tweet Created\") {\n          setErrorMsg(\"Tweet could not be created\");\n          clearTimeout(newMsgTimeoutHandle);\n          newMsgTimeoutHandle = setTimeout(() => {\n            setErrorMsg(\"\");\n            newMsgTimeoutHandle = 0;\n          }, 10000);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // const checkValidation = async (e) => {\n  //   if (!image) {\n  //     let publicId = \"\";\n  //     postTweet(publicId);\n  //   } else {\n  //     const formData = new FormData();\n  //     formData.append(\"file\", image);\n  //     formData.append(\"upload_preset\", preset);\n  //     const res = await Axios.post(url, formData);\n  //     let publicId = res.data.secure_url;\n  //     postTweet(publicId);\n  //   }\n  // };\n\n  const checkValidation = async (e) => {\n    if (!image) {\n      let publicId = \"why not\";\n      editBio(publicId);\n    } else {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", preset);\n      const res = await Axios.post(url, formData);\n      let publicId = res.data.secure_url;\n      editBio(publicId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n    {isOpen && (\n      <>\n        <div className=\"overlay\"></div>\n        <div className=\"modal\">\n          <header className=\"modal__header\">\n            <div onClick={closeModal} className=\"close-button\">\n              &times;\n            </div>\n          </header>\n          <main className=\"modal__main\">\n            <div>\n              <form>\n                <input\n                  type=\"text\"\n                  id=\"tweet\"\n                  name=\"tweet\"\n                  placeholder=\"Set Your Bio\"\n                  required\n                  onChange={(e) => {\n                    setBio(e.target.value);\n                  }}\n                />\n                <input\n                  type=\"text\"\n                  id=\"tweet\"\n                  name=\"tweet\"\n                  placeholder=\"Set Your Name\"\n                  required\n                  onChange={(e) => {\n                    setFullName(e.target.value);\n                  }}\n                />\n                <div\n                  className={classes.root}\n                  style={{ margin: 30 }}\n                  className=\"uploadBtn\"\n                >\n                  <input\n                    required\n                    accept=\"image/*\"\n                    multiple\n                    type=\"file\"\n                    onChange={onChange}\n                  />\n                </div>\n                <button className=\"submitBtn\" onClick={checkValidation}>\n                  <p>Edit</p>\n                </button>\n              </form>\n            </div>\n          </main>\n          {previewSource && (\n            <div className=\"previewDiv\">\n              <img\n                src={previewSource}\n                alt=\"chosen\"\n                className=\"preview-image\"\n              />\n            </div>\n          )}\n        </div>\n      </>\n    )}\n\n    <button className=\"button\" onClick={openModal}>\n      Edit Bio\n    </button>\n  </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}